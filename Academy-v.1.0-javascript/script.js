window.onload = () => {
	const FORM_WRAPPER = document.querySelector(`.column_type_input`);
	const ratingArray = [];
	let countedRating = 20;


  const renderSearch = (allItemsData) => {
    PageEnum.SiteWrapper.SEARCH.innerHTML = ``;

    const searchComponent = new Search();

    // –§—É–Ω–∫—Ü–∏—é .onChange –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–±—å—è–≤–ª—è—Ç—å —Ä–∞–Ω—å—à–µ —á–µ–º –≤—ã–∑–æ–≤ .render () - –∏–Ω–∞—á–µ —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω–∞
    // (—Å–º. –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–ª–∞—Å—Å–∞)
    searchComponent.onChange = (value) => {

      // –ï—Å—Ç—å —Å–º—ã—Å–ª —Å–¥–µ–ª–∞—Ç—å –ø–æ–∏—Å–∫ –Ω–µ–∑–∞–≤–∏—Å—è—â–∏–º –æ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞:
      // value = value.toLowerCase()
      // currentItem._names = currentItem._names.map(name => name.toLowerCase())

      const filteredItems = allItemsData.filter((currentItem) => currentItem._names.includes(value));
      PageEnum.SiteWrapper.rating.innerHTML = ``;
      if (value === ``) {
        ratingRender(countedRating, allItemsData);
      } else {
        ratingUpdate(filteredItems);
      }
    };

    PageEnum.SiteWrapper.SEARCH.appendChild(searchComponent.render());

  };

  const ratingRender = (ratingAmount, ratingArray) => {
    for (let i = 0; i < ratingAmount; i++) {
      ratingArray[i] = new PersonRating(returnRandomData());
    }
    ratingUpdate(ratingArray);
  };

  const ratingUpdate = (ratingArray) => {
    ratingArray.forEach((item) => {
      PageEnum.SiteWrapper.rating.appendChild(item.render());
    });
    if (ratingArray.length === 0) {
      PageEnum.SiteWrapper.rating.innerHTML = `Rating list is empty`
    }
  };

	const renderForm = () => {
		const formComponent = new Form();
		FORM_WRAPPER.appendChild(formComponent.render());

		formComponent.onSubmit = (evt) => {
			evt.preventDefault();

      // –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º—ã
			// –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö, –∞ —Ç–∞–∫ –∂–µ –Ω–∞ –∏—Ö –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å

			// –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—á–∏—Ç—ã–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã - –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –∞—Ç—Ç—Ä–∏–±—É—Ç .checked
			// –¢–∞–∫ –∂–µ –Ω—É–∂–Ω–æ –¥–µ—Ä–∂–∞—Ç—å –≤ –≥–æ–ª–æ–≤–µ —á—Ç–æ —É –Ω–∞—Å –Ω–µ—Å–∫–æ–ª—å–∫–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å name=cat|rest|money
			// –ü–æ—ç—Ç–æ–º—É —Ç–∞–∫ –∂–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å querySelectorAll

			const name = document.querySelector(`input[name=name]`).value;
			// const cat = document.querySelector(`input[name=cat]`).value;
			// const rest = document.querySelector(`input[name=rest]`).value;
			// const money = document.querySelector(`input[name=money]`).value;

      const cat = document.querySelector(`input[name=cat]`).checked;
      const rest = document.querySelector(`input[name=rest]`).checked;
      const money = document.querySelector(`input[name=money]`).checked;

			const Man = new Person(name);
			if (cat) {
				Man.hasCat();
			}
			if (rest) {
				Man.hasRest();
			}
			if (money) {
				Man.hasMoney();
			}
			Man.isSunny()
				.then((happiness) => {
					Man._valueElement.innerHTML = name;
					if (happiness === 4) {
						Man._iconElement.innerHTML = 'üòÜ';
					} else if (happiness === 3 || happiness === 2) {
						Man._iconElement.innerHTML = 'üòê';
					} else {
						Man._iconElement.innerHTML = '‚òπÔ∏è';
					}
				});
		}
	};

	renderForm();
  renderSearch(ratingArray);
	ratingRender(countedRating, ratingArray);
};

// –û–±—â–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
// –ö–æ–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–µ–≤–µ—Ä–Ω–æ - –∏–∑ –∑–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Å—á–∏—Ç—ã–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º (.value –≤–º–µ—Å—Ç–æ .checked)
// —Å—á–µ—Ç—á–∏–∫ "—Å—á–∞—Å—Ç—å—è" –≤—Å–µ –≤—Ä–µ–º—è –±—ã–ª —Ä–∞–≤–µ–Ω —Ü–∏—Ñ—Ä–µ 3 –∏–ª–∏ 4

// –ü–æ–∏—Å–∫ —Ç–∞–∫ –∂–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç - –∏–∑ –∑–∞ –ø–æ—Ç–µ—Ä–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ –∫–æ–ª–ª–±–µ–∫–∞ –æ—Ç–≤–µ—á–∞—é—â–µ–≥–æ –∑–∞ –º–æ–∫ –ø–æ–∏—Å–∫
//
// –ò–º–µ–µ—Ç —Å–º—ã—Å–ª –ø–æ—Ä–∞–±–æ—Ç–∞—Ç—å —Ç–∞–º —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π —Ñ–∞–π–ª–æ–≤ –≤ –ø—Ä–æ–µ–∫—Ç–µ - –Ω–∞–ø—Ä–∏–º–µ—Ä –≤—ã–Ω–µ—Å—Ç–∏ –≤—Å–µ –æ–±—å—è–≤–ª–µ–Ω–∏—è –∫–ª–∞—Å—Å–æ–≤ –≤ –æ—Ç–¥–µ–ª—å–Ω—É—é –ø–∞–ø–∫—É

// –¢–∞–∫ –∂–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª–∏–Ω—Ç–µ—Ä, –ª–∏–±–æ –Ω–∞–±–æ—Ä –≥–æ—Ç–æ–≤ –ø—Ä–∞–∫—Ç–∏–∫ (–Ω–∞–ø—Ä–∏–º–µ—Ä standard https://github.com/standard/standard)
// –¥–ª—è —Å–æ–±–ª—é–¥–µ–Ω–∏—è code-style